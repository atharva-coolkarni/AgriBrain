import { useState } from "react";
import { useLocation, useNavigate } from "react-router-dom";
import "../../App.css";
import "../CropPlanner/CropPlanner.css";

function CropPlanner() {

  const translations = {
  english: {
    title: "ЁЯМ▒ Crop Planner",
    soilTypeOptions: {
      Loamy: "Loamy",
      Clay: "Clay",
      Sandy: "Sandy",
      Silty: "Silty"
    },
    subtitle: "Plan your crops based on climate, season & AI recommendations.",
    farmingLocationEnv: "Farming Location and Environment",
    soilType: "Soil Type",
    soilPH: "Soil pH",
    soilEC: "Soil EC [dS/m]",
    ecOptions: {
      Low:"Low [0 - 0.8]",
      Medium: "Medium [0.8 - 2.0]",
      High: "High [> 2.0]"},
    landTopo: "Land Topography",
    landTopoOptions: {
      flat:"Flat", 
      sloped: "Sloped",
      undulating: "Undulating",
      terraced: "Terraced"
    },
    landFinInfo: "Land and Financial Information",
    budgetOptions: {
      Low: "Low (тВ╣0 - тВ╣50,000)",
      Medium: "Medium (тВ╣50,001 - тВ╣2,00,000)",
      High: "High (> тВ╣2,00,000)"
    },
    landArea: "Land Area (acres)",
    budget: "Budget",
    labor: "Labor Availability",
    farmPractices: "Farming Practices and Challenges",
    irrigation: "Irrigation System",
    irrigationOptions: {
      Flood: "Flood",
      Drip: "Drip",
      Sprinkler: "Sprinkler",
      Canal: "Canal",
      Well: "Well",
      Rainfed: "Rainfed"
    },
    fertilizer: "Fertilizer Used",
    pestDisease: "Pest & Disease Issues",
    submit: "Submit",
    back: "Back",
    recommendCropPlan: "ЁЯМ╛ Recommended Crop Plan",
    suitabilityScore: "Suitability Score",
    cropDetails: "Crop Details",
    selectOption: "-- Select an option --",
    landAreaPlaceholder: "Enter land area...",
    fertilizerPlaceholder: "Enter fertilizers used...",
    pestDiseasePlaceholder: "Enter pest/disease issues...",
    laborPlaceholder: "e.g., 3 workers / day",
    loading: "Submitting...",
    recommendedCrop: "Recommended Crop",
    noReport: "No report generated.",
    farmingPracticesChallenges: "Farming Practices and Challenges",
    financialInfo:"Land and Financial Information",
    soilPHRange: "Soil pH Range",
    temperatureRange: "Temperature Range",
    rainfallRequirement: "Rainfall Requirement",
    irrigation: "Irrigation",
    aiCropPlanReport: "AI Crop Plan Report"
  },

  hindi: {
    title: "ЁЯМ▒ рдлрд╕рд▓ рдпреЛрдЬрдирд╛рдХрд╛рд░",
    soilTypeOptions: {
      Loamy: "рджреЛрдордЯ",
      Clay: "рдЪрд┐рдХрдиреА",
      Sandy: "рдмрд▓реБрдИ",
      Silty: "рдЧрд╛рджрдпреБрдХреНрдд"
    },
    subtitle: "рдЬрд▓рд╡рд╛рдпреБ, рдореМрд╕рдо рдФрд░ рдПрдЖрдИ рд╕реБрдЭрд╛рд╡реЛрдВ рдХреЗ рдЖрдзрд╛рд░ рдкрд░ рдЕрдкрдиреА рдлрд╕рд▓реЗрдВ рдпреЛрдЬрдирд╛ рдмрдирд╛рдПрдВред",
    farmingLocationEnv: "рдЦреЗрддреА рдХрд╛ рд╕реНрдерд╛рди рдФрд░ рдкрд░реНрдпрд╛рд╡рд░рдг",
    soilType: "рдорд┐рдЯреНрдЯреА рдХрд╛ рдкреНрд░рдХрд╛рд░",
    soilPH: "рдорд┐рдЯреНрдЯреА рдХрд╛ pH",
    soilEC: "рдорд┐рдЯреНрдЯреА рдХреА EC [dS/m]",
    ecOptions: {
      Low:"рдХрдо [0 - 0.8]",
      Medium: "рдордзреНрдпрдо [0.8 - 2.0]",
      High: "рдЙрдЪреНрдЪ [> 2.0]"
    },
    landTopo: "рднреВрдорд┐ рдХреА рд╕реНрдерд▓рд╛рдХреГрддрд┐",
    landTopoOptions: {
      flat: "рд╕рдорддрд▓",
      sloped: "рдврд▓рд╛рди",
      undulating: "рддрд░рдВрдЧрд┐рдд",
      terraced: "рд╕реАрдврд╝реАрджрд╛рд░"
    },
    landFinInfo: "рднреВрдорд┐ рдФрд░ рд╡рд┐рддреНрддреАрдп рдЬрд╛рдирдХрд╛рд░реА",
    budgetOptions: {
      Low: "рдХрдо (тВ╣0 - тВ╣50,000)",
      Medium: "рдордзреНрдпрдо (тВ╣50,001 - тВ╣2,00,000)",
      High: "рдЙрдЪреНрдЪ (> тВ╣2,00,000)"
    },
    landArea: "рднреВрдорд┐ рдХреНрд╖реЗрддреНрд░ (рдПрдХрдбрд╝)",
    budget: "рдмрдЬрдЯ",
    labor: "рд╢реНрд░рдо рдХреА рдЙрдкрд▓рдмреНрдзрддрд╛",
    farmPractices: "рдЦреЗрддреА рдХреЗ рддрд░реАрдХреЗ рдФрд░ рдЪреБрдиреМрддрд┐рдпрд╛рдБ",
    irrigation: "рд╕рд┐рдВрдЪрд╛рдИ рдкреНрд░рдгрд╛рд▓реА",
    irrigationOptions: {
      Flood: "рдмрд╛рдврд╝",
      Drip: "рдбреНрд░рд┐рдк",
      Sprinkler: "рд╕реНрдкреНрд░рд┐рдВрдХрд▓рд░",
      Canal: "рдирд╣рд░",
      Well: "рдХреБрдЖрдБ",
      Rainfed: "рд╡рд░реНрд╖рд╛ рдкрд░ рдЖрдзрд╛рд░рд┐рдд"
    },
    fertilizer: "рдЙрдкрдпреЛрдЧ рдХреА рдЧрдИ рдЦрд╛рдж",
    pestDisease: "рдХреАрдЯ рдФрд░ рд░реЛрдЧ рдХреА рд╕рдорд╕реНрдпрд╛рдПрдБ",
    submit: "рдЬрдорд╛ рдХрд░реЗрдВ",
    back: "рд╡рд╛рдкрд╕",
    recommendCropPlan: "ЁЯМ╛ рдЕрдиреБрд╢рдВрд╕рд┐рдд рдлрд╕рд▓ рдпреЛрдЬрдирд╛",
    suitabilityScore: "рдЙрдкрдпреБрдХреНрддрддрд╛ рд╕реНрдХреЛрд░",
    cropDetails: "рдлрд╕рд▓ рд╡рд┐рд╡рд░рдг",
    selectOption: "-- рд╡рд┐рдХрд▓реНрдк рдЪреБрдиреЗрдВ --",
    landAreaPlaceholder: "рднреВрдорд┐ рдХреНрд╖реЗрддреНрд░ рджрд░реНрдЬ рдХрд░реЗрдВ...",
    fertilizerPlaceholder: "рдЦрд╛рдж рджрд░реНрдЬ рдХрд░реЗрдВ...",
    pestDiseasePlaceholder: "рд╕рдорд╕реНрдпрд╛рдПрдБ рджрд░реНрдЬ рдХрд░реЗрдВ...",
    laborPlaceholder: "рдЙрджрд╛., 3 рдордЬрджреВрд░/рджрд┐рди",
    loading: "рдЬрдорд╛ рд╣реЛ рд░рд╣рд╛ рд╣реИ...",
    recommendedCrop: "рдЕрдиреБрд╢рдВрд╕рд┐рдд рдлрд╕рд▓",
    noReport: "рдХреЛрдИ рд░рд┐рдкреЛрд░реНрдЯ рддреИрдпрд╛рд░ рдирд╣реАрдВ рдХреА рдЧрдИред",
    farmingPracticesChallenges: "рдХреГрд╖рд┐ рдкреНрд░рдерд╛рдПрдБ рдФрд░ рдЪреБрдиреМрддрд┐рдпрд╛рдБ",
    financialInfo: "рднреВрдорд┐ рдФрд░ рд╡рд┐рддреНрддреАрдп рдЬрд╛рдирдХрд╛рд░реА",
    soilPHRange: "рдорд┐рдЯреНрдЯреА рдХрд╛ pH рд╕реАрдорд╛",
    temperatureRange: "рддрд╛рдкрдорд╛рди рд╕реАрдорд╛",
    rainfallRequirement: "рд╡рд░реНрд╖рд╛ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛",
    irrigation: "рд╕рд┐рдВрдЪрд╛рдИ",
    aiCropPlanReport: "рдПрдЖрдИ рдлрд╕рд▓ рдпреЛрдЬрдирд╛ рд░рд┐рдкреЛрд░реНрдЯ"
  },

  tamil: {
    title: "ЁЯМ▒ рокропро┐ро░рпН родро┐роЯрпНроЯроорпН",
    soilTypeOptions: {
      Loamy: "роХро│ро┐роорогрпН",
      Clay: "роЪро┐роХрокрпНрокрпБ роорогрпН",
      Sandy: "роорогро▒рпНрокро╛роЩрпНроХрпБ",
      Silty: "роЪрпЗро▒рпНро▒рпБ"
    },
    subtitle: "роХро╛ро▓роиро┐ро▓рпИ, рокро░рпБро╡роорпН рооро▒рпНро▒рпБроорпН AI рокро░ро┐роирпНродрпБро░рпИроХро│ро┐ройрпН роЕроЯро┐рокрпНрокроЯрпИропро┐ро▓рпН роЙроЩрпНроХро│рпН рокропро┐ро░рпНроХро│рпИ родро┐роЯрпНроЯрооро┐роЯрпБроЩрпНроХро│рпН.",
    farmingLocationEnv: "ро╡ро┐ро╡роЪро╛роп роЗроЯроорпН рооро▒рпНро▒рпБроорпН роЪрпВро┤ро▓рпН",
    soilType: "роорогрпН ро╡роХрпИ",
    soilPH: "роорогрпН pH",
    soilEC: "роорогрпН EC [dS/m]",
    ecOptions: {
      Low: "роХрпБро▒рпИроирпНрод [0 - 0.8]",
      Medium: "роироЯрпБродрпНродро░роорпН [0.8 - 2.0]",
      High: "роЕродро┐роХ [> 2.0]"
    },
    landTopo: "роиро┐ро▓рокрпНрокро░рокрпНрокрпБ",
    landTopoOptions: {
      flat: "роЪроородрпНродро│роорпН",
      sloped: "роЪро░ро┐ро╡рпБ",
      undulating: "роЕро▓рпИрокрпЛро▓рпН роиро┐ро▓роорпН",
      terraced: "рокроЯро┐роХроЯрпНроЯ роЕроорпИрокрпНрокрпБ"
    },
    landFinInfo: "роиро┐ро▓роорпН рооро▒рпНро▒рпБроорпН роиро┐родро┐ родроХро╡ро▓рпН",
    budgetOptions: {
      Low: "роХрпБро▒рпИроирпНрод (тВ╣0 - тВ╣50,000)",
      Medium: "роироЯрпБродрпНродро░роорпН (тВ╣50,001 - тВ╣2,00,000)",
      High: "роЕродро┐роХ (> тВ╣2,00,000)"
    },
    landArea: "роиро┐ро▓рокрпН рокро░рокрпНрокрпБ (роПроХрпНроХро░рпН)",
    budget: "роЪрпЖро▓ро╡рпБродрпН родро┐роЯрпНроЯроорпН",
    labor: "родрпКро┤ро┐ро▓ро╛ро│ро░рпН роХро┐роЯрпИроХрпНроХрпБроорпН роиро┐ро▓рпИ",
    farmPractices: "ро╡ро┐ро╡роЪро╛роп роорпБро▒рпИроХро│рпН рооро▒рпНро▒рпБроорпН роЪро╡ро╛ро▓рпНроХро│рпН",
    irrigation: "рокро╛роЪрой роЕроорпИрокрпНрокрпБ",
    irrigationOptions: {
      Flood: "рокрпЗро░ро╛ро▒рпБродро▓рпН",
      Drip: "роЯро┐ро░ро┐рокрпН",
      Sprinkler: "ро╕рпНрокро┐ро░ро┐роЩрпНроХрпНро▓ро░рпН",
      Canal: "роХро╛ро▓рпНро╡ро╛ропрпН",
      Well: "роХро┐рогро▒рпБ",
      Rainfed: "рооро┤рпИ роЪро╛ро░рпНроирпНрод"
    },
    fertilizer: "роЙро░роЩрпНроХро│рпН рокропройрпНрокроЯрпБродрпНродрокрпНрокроЯрпНроЯродрпБ",
    pestDisease: "рокрпВроЪрпНроЪро┐ рооро▒рпНро▒рпБроорпН роирпЛропрпН рокро┐ро░роЪрпНроЪро┐ройрпИроХро│рпН",
    submit: "роЪрооро░рпНрокрпНрокро┐роХрпНроХро╡рпБроорпН",
    back: "рокро┐ройрпНройрпБроХрпНроХрпБ",
    recommendCropPlan: "ЁЯМ╛ рокро░ро┐роирпНродрпБро░рпИроХрпНроХрокрпНрокроЯрпНроЯ рокропро┐ро░рпН родро┐роЯрпНроЯроорпН",
    suitabilityScore: "рокрпКро░рпБродрпНродрооро╛рой роородро┐рокрпНрокрпЖрогрпН",
    cropDetails: "рокропро┐ро░рпН ро╡ро┐ро╡ро░роЩрпНроХро│рпН",
    selectOption: "-- родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН --",
    landAreaPlaceholder: "роиро┐ро▓рокрпН рокро░рокрпНрокрпИ роЙро│рпНро│ро┐роЯро╡рпБроорпН...",
    fertilizerPlaceholder: "роЙро░роЩрпНроХро│рпИ роЙро│рпНро│ро┐роЯро╡рпБроорпН...",
    pestDiseasePlaceholder: "рокро┐ро░роЪрпНроЪро┐ройрпИроХро│рпИ роЙро│рпНро│ро┐роЯро╡рпБроорпН...",
    laborPlaceholder: "роЙ.рокро┐., 3 родрпКро┤ро┐ро▓ро╛ро│ро░рпНроХро│рпН/роиро╛ро│рпН",
    loading: "роЪрооро░рпНрокрпНрокро┐роХрпНроХрокрпНрокроЯрпБроХро┐ро▒родрпБ...",
    recommendedCrop: "рокро░ро┐роирпНродрпБро░рпИроХрпНроХрокрпНрокроЯрпНроЯ рокропро┐ро░рпН",
    noReport: "роЕро▒ро┐роХрпНроХрпИ роЙро░рпБро╡ро╛роХрпНроХрокрпНрокроЯро╡ро┐ро▓рпНро▓рпИ.",
    farmingPracticesChallenges: "ро╡ро┐ро╡роЪро╛роп роорпБро▒рпИроХро│рпН рооро▒рпНро▒рпБроорпН роЪро╡ро╛ро▓рпНроХро│рпН",
    financialInfo: "роиро┐ро▓роорпН рооро▒рпНро▒рпБроорпН роиро┐родро┐ родроХро╡ро▓рпН",
    soilPHRange: "роорогрпН pH ро╡ро░роорпНрокрпБ",
    temperatureRange: "ро╡рпЖрокрпНрокроиро┐ро▓рпИ ро╡ро░роорпНрокрпБ",
    rainfallRequirement: "рооро┤рпИ родрпЗро╡рпИропро╛?",
    irrigation: "роирпАро░рпНрокрпНрокро╛роЪройроорпН",
    aiCropPlanReport: "AI рокропро┐ро░рпН родро┐роЯрпНроЯ роЕро▒ро┐роХрпНроХрпИ"
  },

  telugu: {
    title: "ЁЯМ▒ р░кр░Вр░Я р░кр▒Нр░░р░гр░╛р░│р░┐р░Х",
    soilTypeOptions: {
      Loamy: "р░▓р▒Лр░ор░┐",
      Clay: "р░ор░Яр▒Нр░Яр░┐",
      Sandy: "р░Зр░╕р▒Бр░Х",
      Silty: "р░Чр░╛р░жр▒Ж"
    },
    subtitle: "р░╡р░╛р░др░╛р░╡р░░р░гр░В, р░╕р▒Ар░Ьр░ир▒Н р░ор░░р░┐р░пр▒Б AI р░╕р░┐р░лр░╛р░░р▒Нр░╕р▒Бр░▓ р░Жр░зр░╛р░░р░Вр░Чр░╛ р░ор▒А р░кр░Вр░Яр░▓р░ир▒Б р░кр▒Нр░░р░гр░╛р░│р░┐р░Х р░Ър▒Зр░пр░Вр░бр░┐.",
    farmingLocationEnv: "р░╡р▒Нр░пр░╡р░╕р░╛р░п р░╕р▒Нр░ер░▓р░В р░ор░░р░┐р░пр▒Б р░кр░░р▒Нр░пр░╛р░╡р░░р░гр░В",
    soilType: "р░ор░Яр▒Нр░Яр░┐ р░░р░Хр░В",
    soilPH: "р░ор░Яр▒Нр░Яр░┐ pH",
    soilEC: "р░ор░Яр▒Нр░Яр░┐ EC [dS/m]",
    ecOptions: {
      Low: "р░др░Хр▒Нр░Хр▒Бр░╡ [0 - 0.8]",
      Medium: "р░ор░зр▒Нр░пр░╕р▒Нр░е [0.8 - 2.0]",
      High: "р░Ер░зр░┐р░Х [> 2.0]"
    },
    landTopo: "р░нр▒Вр░ор░┐ р░нр▒Мр░Чр▒Лр░│р░┐р░Хр░В",
    landTopoOptions: {
      flat: "р░╕р░ор░др░▓",
      sloped: "р░╡р░Вр░Хр░░р░нр▒Вр░ор░┐",
      undulating: "р░др░░р░Вр░Чр░╛р░Хр░╛р░░ р░нр▒Вр░нр░╛р░Чр░В",
      terraced: "р░Хр░Яр▒Нр░Яр░┐р░и р░кр▒Кр░▓р░╛р░▓р▒Б"
    },
    landFinInfo: "р░нр▒Вр░ор░┐ р░ор░░р░┐р░пр▒Б р░Жр░░р▒Нр░ер░┐р░Х р░╕р░ор░╛р░Ър░╛р░░р░В",
    budgetOptions: {
      Low: "р░др░Хр▒Нр░Хр▒Бр░╡ (тВ╣0 - тВ╣50,000)",
      Medium: "р░ор░зр▒Нр░пр░╕р▒Нр░е (тВ╣50,001 - тВ╣2,00,000)",
      High: "р░Ер░зр░┐р░Х (> тВ╣2,00,000)"
    },
    landArea: "р░нр▒Вр░ор░┐ р░╡р░┐р░╕р▒Нр░др▒Ар░░р▒Нр░гр░В (р░Ор░Хр░░р░╛р░▓р▒Б)",
    budget: "р░мр░бр▒Нр░Ьр▒Жр░Яр▒Н",
    labor: "р░Хр▒Вр░▓р▒Ар░▓ р░▓р░нр▒Нр░пр░д",
    farmPractices: "р░╡р▒Нр░пр░╡р░╕р░╛р░п р░кр░жр▒Нр░зр░др▒Бр░▓р▒Б р░ор░░р░┐р░пр▒Б р░╕р░╡р░╛р░│р▒Нр░▓р▒Б",
    irrigation: "р░кр▒Кр░▓р░╛р░▓ р░ир▒Ар░Яр░┐р░кр░╛р░░р▒Бр░жр░▓",
    irrigationOptions: {
      Flood: "р░кр▒Лр░Яр▒Б",
      Drip: "р░бр▒Нр░░р░┐р░кр▒Н",
      Sprinkler: "р░╕р▒Нр░кр▒Нр░░р░┐р░Вр░Хр▒Нр░▓р░░р▒Н",
      Canal: "р░Хр░╛р░▓р▒Бр░╡",
      Well: "р░╡р▒Жр░│р▒Н",
      Rainfed: "р░╡р░╛р░и р░Жр░зр░╛р░░р░┐р░др░В"
    },
    fertilizer: "р░Ор░░р▒Бр░╡р▒Бр░▓р▒Б р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░мр░бр▒Нр░бр░╛р░пр░┐",
    pestDisease: "р░Хр▒Ар░Яр░Хр░╛р░▓р▒Б р░ор░░р░┐р░пр▒Б р░╡р▒Нр░пр░╛р░зр░┐ р░╕р░ор░╕р▒Нр░пр░▓р▒Б",
    submit: "р░╕р░ор░░р▒Нр░кр░┐р░Вр░Ър░Вр░бр░┐",
    back: "р░╡р▒Жр░ир░Хр▒Нр░Хр░┐",
    recommendCropPlan: "ЁЯМ╛ р░╕р░┐р░лр░╛р░░р▒Нр░╕р▒Б р░Ър▒Зр░пр░мр░бр░┐р░и р░кр░Вр░Я р░кр▒Нр░░р░гр░╛р░│р░┐р░Х",
    suitabilityScore: "р░╕р░░р░┐р░кр▒Лр░пр▒З р░╕р▒Нр░Хр▒Лр░░р▒Б",
    cropDetails: "р░кр░Вр░Я р░╡р░┐р░╡р░░р░╛р░▓р▒Б",
    selectOption: "-- р░Тр░Хр░жр░╛р░ир▒Нр░ир░┐ р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐ --",
    landAreaPlaceholder: "р░нр▒Вр░ор░┐ р░╡р░┐р░╕р▒Нр░др▒Ар░░р▒Нр░гр░В р░ир░ор▒Лр░жр▒Б р░Ър▒Зр░пр░Вр░бр░┐...",
    fertilizerPlaceholder: "р░Ор░░р▒Бр░╡р▒Бр░▓р▒Б р░ир░ор▒Лр░жр▒Б р░Ър▒Зр░пр░Вр░бр░┐...",
    pestDiseasePlaceholder: "р░╕р░ор░╕р▒Нр░пр░▓р▒Б р░ир░ор▒Лр░жр▒Б р░Ър▒Зр░пр░Вр░бр░┐...",
    laborPlaceholder: "р░Йр░жр░╛., 3 р░Хр░╛р░░р▒Нр░ор░┐р░Хр▒Бр░▓р▒Б/р░░р▒Лр░Ьр▒Б",
    loading: "р░╕р░ор░░р▒Нр░кр░┐р░╕р▒Нр░др▒Бр░ир▒Нр░ир░╛р░░р▒Б...",
    recommendedCrop: "р░╕р░┐р░лр░╛р░░р▒Нр░╕р▒Б р░Ър▒Зр░╕р░┐р░и р░кр░Вр░Я",
    noReport: "р░ир░┐р░╡р▒Зр░жр░┐р░Х р░░р▒Вр░кр▒Кр░Вр░жр░┐р░Вр░Ър░мр░бр░▓р▒Зр░жр▒Б.",
    farmingPracticesChallenges: "р░╡р▒Нр░пр░╡р░╕р░╛р░п р░кр░жр▒Нр░зр░др▒Бр░▓р▒Б р░ор░░р░┐р░пр▒Б р░╕р░╡р░╛р░│р▒Нр░▓р▒Б",
    financialInfo: "р░нр▒Вр░ор░┐ р░ор░░р░┐р░пр▒Б р░Жр░░р▒Нр░ер░┐р░Х р░╕р░ор░╛р░Ър░╛р░░р░В",
    soilPHRange: "р░ор░Яр▒Нр░Яр░┐р░Хр░┐ pH р░кр░░р░┐р░зр░┐",
    temperatureRange: "р░Йр░╖р▒Нр░гр▒Лр░Чр▒Нр░░р░д р░кр░░р░┐р░зр░┐",
    rainfallRequirement: "р░╡р░░р▒Нр░╖р░кр░╛р░др░В р░Ер░╡р░╕р░░р░В",
    irrigation: "р░кр▒Кр░▓р░╛р░▓ р░ир▒Ар░Яр░┐р░кр░╛р░░р▒Бр░жр░▓",
    aiCropPlanReport: "AI р░кр░Вр░Я р░кр▒Нр░░р░гр░╛р░│р░┐р░Х р░ир░┐р░╡р▒Зр░жр░┐р░Х"
  },

  punjabi: {
    title: "ЁЯМ▒ рилри╕ри▓ рипрйЛриЬриХ",
    soilTypeOptions: {
      Loamy: "рижрйЛриориЯ",
      Clay: "риЪри┐риХригрйА",
      Sandy: "ри░рйЗридри▓рйА",
      Silty: "риЧри╛рижрйА"
    },
    subtitle: "риорйМри╕рио, ри░рйБрй▒рид риЕридрйЗ AI рижрйАриЖриВ ри╕ри┐рилри╛ри░ри╕ри╝ри╛риВ рижрйЗ риЖризри╛ри░ 'ридрйЗ риЖрикригрйАриЖриВ рилри╕ри▓ри╛риВ рижрйА рипрйЛриЬриири╛ римригри╛риУред",
    farmingLocationEnv: "риЦрйЗридрйАримри╛рйЬрйА рижрйА риери╛риВ риЕридрйЗ ри╡ри╛ридри╛ри╡ри░риг",
    soilType: "риори┐рй▒риЯрйА рижрйА риХри┐ри╕рио",
    soilPH: "риори┐рй▒риЯрйА pH",
    soilEC: "риори┐рй▒риЯрйА EC [dS/m]",
    ecOptions: {
      Low: "риШрй▒риЯ [0 - 0.8]",
      Medium: "риорй▒ризрио [0.8 - 2.0]",
      High: "ри╡рй▒риз [> 2.0]"
    },
    landTopo: "риЬри╝риорйАрии рижрйА римригри╛ри╡риЯ",
    landTopoOptions: {
      flat: "ри╕риоридри▓",
      sloped: "риври▓ри╛рии ри╡ри╛ри▓рйА",
      undulating: "ри▓ри╣ри┐ри░рижри╛ри░",
      terraced: "ри╕рйАрйЬрйАри╡ри╛ри░"
    },
    landFinInfo: "риЬри╝риорйАрии риЕридрйЗ ри╡ри┐рй▒ридрйА риЬри╛ригриХри╛ри░рйА",
    budgetOptions: {
      Low: "риШрй▒риЯ (тВ╣0 - тВ╣50,000)",
      Medium: "риорй▒ризрио (тВ╣50,001 - тВ╣2,00,000)",
      High: "ри╡рй▒риз (> тВ╣2,00,000)"
    },
    landArea: "риЬри╝риорйАрии риЦрйЗридри░ (риПриХрйЬ)",
    budget: "римриЬриЯ",
    labor: "риориЬри╝рижрйВри░ риЙрикри▓римризридри╛",
    farmPractices: "риЦрйЗридрйАримри╛рйЬрйА риЕринри┐риЖри╕ риЕридрйЗ риЪрйБригрйМридрйАриЖриВ",
    irrigation: "ри╕ри┐рй░риЪри╛риИ рикрйНри░ригри╛ри▓рйА",
    irrigationOptions: {
      Flood: "римрд╛рдврд╝",
      Drip: "рибрйНри░ри┐рик",
      Sprinkler: "ри╕рикрйНри░ри┐рй░риХри▓ри░",
      Canal: "риири╣ри┐ри░",
      Well: "риХрйВриЖриВ",
      Rainfed: "римри░ри╕ри╛ридрйА"
    },
    fertilizer: "риЦри╛риж ри╡ри░ридрйА риЧриИ",
    pestDisease: "риХрйАрйЬрйЗ риЕридрйЗ римри┐риори╛ри░рйА ри╕риорй▒ри╕ри┐риЖри╡ри╛риВ",
    submit: "риЬриорйНри╣ри╛ риХри░рйЛ",
    back: "ри╡ри╛рикри╕",
    recommendCropPlan: "ЁЯМ╛ ри╕ри┐рилри╛ри░ри╕ри╝ риХрйАридрйА рилри╕ри▓ рипрйЛриЬриири╛",
    suitabilityScore: "риЙриЪри┐ридридри╛ ри╕риХрйЛри░",
    cropDetails: "рилри╕ри▓ ри╡рйЗри░ри╡рйЗ",
    selectOption: "-- риЗрй▒риХ риЪрйЛриг риХри░рйЛ --",
    landAreaPlaceholder: "риЬри╝риорйАрии риЦрйЗридри░ рижри░риЬ риХри░рйЛ...",
    fertilizerPlaceholder: "риЦри╛риж рижри░риЬ риХри░рйЛ...",
    pestDiseasePlaceholder: "ри╕риорй▒ри╕ри┐риЖри╡ри╛риВ рижри░риЬ риХри░рйЛ...",
    laborPlaceholder: "риЬри┐ри╡рйЗриВ 3 риориЬри╝рижрйВри░/рижри┐рии",
    loading: "риЬриорйНри╣ри╛риВ ри╣рйЛ ри░ри┐ри╣ри╛ ри╣рйИ...",
    recommendedCrop: "ри╕ри┐рилри╛ри░ри╕ри╝ риХрйАридрйА рилри╕ри▓",
    noReport: "риХрйЛриИ ри░ри┐рикрйЛри░риЯ ридри┐риЖри░ риири╣рйАриВ риХрйАридрйА риЧриИред",
    farmingPracticesChallenges: "риЦрйЗридрйА рикрйНри░риери╛ри╡ри╛риВ риЕридрйЗ риЪрйБригрйМридрйАриЖриВ",
    financialInfo: "риЬри╝риорйАрии риЕридрйЗ ри╡ри┐рй▒ридрйА риЬри╛ригриХри╛ри░рйА",
    soilPHRange: "риори┐рй▒риЯрйА рижри╛ pH ри╕рйАриори╛",
    temperatureRange: "ридри╛рикриори╛рии ри╕рйАриори╛",
    rainfallRequirement: "ри╡ри░риЦри╛ рижрйА ри▓рйЛрйЬ",
    irrigation: "ри╕ри┐рй░риЪри╛риИ",
    aiCropPlanReport: "AI рилри╕ри▓ рипрйЛриЬриири╛ ри░ри┐рикрйЛри░риЯ"
  },

  marathi: {
    title: "ЁЯМ▒ рдкрд┐рдХ рдирд┐рдпреЛрдЬрдХ",
    soilTypeOptions: {
      Loamy: "рджреЛрдордЯ",
      Clay: "рдЪрд┐рдХрдг",
      Sandy: "рд╡рд╛рд▓реБрдХрд╛рдордп",
      Silty: "рдЧрд╛рд│рдпреБрдХреНрдд"
    },
    subtitle: "рд╣рд╡рд╛рдорд╛рди, рд╣рдВрдЧрд╛рдо рдЖрдгрд┐ AI рд╢рд┐рдлрд╛рд░рд╕реАрдВрд╡рд░ рдЖрдзрд╛рд░рд┐рдд рддреБрдордЪреНрдпрд╛ рдкрд┐рдХрд╛рдВрдЪреЗ рдирд┐рдпреЛрдЬрди рдХрд░рд╛.",
    farmingLocationEnv: "рд╢реЗрддреАрдЪреЗ рдард┐рдХрд╛рдг рдЖрдгрд┐ рд╡рд╛рддрд╛рд╡рд░рдг",
    soilType: "рдорд╛рддреАрдЪрд╛ рдкреНрд░рдХрд╛рд░",
    soilPH: "рдорд╛рддреАрдЪрд╛ pH",
    soilEC: "рдорд╛рддреА EC [dS/m]",
    ecOptions: {
      Low: "рдХрдореА [0 - 0.8]",
      Medium: "рдордзреНрдпрдо [0.8 - 2.0]",
      High: "рдЬрд╛рд╕реНрдд [> 2.0]"
    },
    landTopo: "рдЬрдорд┐рдиреАрдЪреА рднреМрдЧреЛрд▓рд┐рдХ рд░рдЪрдирд╛",
    landTopoOptions: {
      flat: "рд╕рдкрд╛рдЯ",
      sloped: "рдЙрддрд╛рд░",
      undulating: "рд▓рд╣рд░реА",
      terraced: "рд╕рд┐рдВрдЪрд┐рдд/рддрд┐рд╣реЗрд░реА рдкрд╛рдпрд▒реНрдпрд╛"
    },
    landFinInfo: "рдЬрдореАрди рдЖрдгрд┐ рдЖрд░реНрдерд┐рдХ рдорд╛рд╣рд┐рддреА",
    budgetOptions: {
      Low: "рдХрдореА (тВ╣0 - тВ╣50,000)",
      Medium: "рдордзреНрдпрдо (тВ╣50,001 - тВ╣2,00,000)",
      High: "рдЬрд╛рд╕реНрдд (> тВ╣2,00,000)"
    },
    landArea: "рдЬрдорд┐рдиреАрдЪреЗ рдХреНрд╖реЗрддреНрд░рдлрд│ (рдПрдХрд░)",
    budget: "рдмрдЬреЗрдЯ",
    labor: "рдордЬреВрд░ рдЙрдкрд▓рдмреНрдзрддрд╛",
    farmPractices: "рд╢реЗрддреА рдкрджреНрдзрддреА рдЖрдгрд┐ рдЖрд╡реНрд╣рд╛рдиреЗ",
    irrigation: "рд╕рд┐рдВрдЪрди рдкрджреНрдзрддреА",
    irrigationOptions: {
      Flood: "рдкрд╛рдгреАрдкреБрд░рд╡рдард╛",
      Drip: "рдбреНрд░рд┐рдк",
      Sprinkler: "рд╕реНрдкреНрд░рд┐рдВрдХрд▓рд░",
      Canal: "рдХрд╛рд▓рд╡рд╛",
      Well: "рд╡рд┐рд╣реАрд░",
      Rainfed: "рдкрд╛рд╡рд╕рд╛рд╡рд░ рдЕрд╡рд▓рдВрдмреВрди"
    },
    fertilizer: "рд╡рд╛рдкрд░рд▓реЗрд▓реЗ рдЦрдд",
    pestDisease: "рдХреАрдб рд╡ рд░реЛрдЧ рд╕рдорд╕реНрдпрд╛",
    submit: "рд╕рдмрдорд┐рдЯ рдХрд░рд╛",
    back: "рдорд╛рдЧреЗ",
    recommendCropPlan: "ЁЯМ╛ рд╢рд┐рдлрд╛рд░рд╕ рдХреЗрд▓реЗрд▓реА рдкрд┐рдХ рдпреЛрдЬрдирд╛",
    suitabilityScore: "рдпреЛрдЧреНрдпрддреЗрдЪрд╛ рд╕реНрдХреЛрд░",
    cropDetails: "рдкрд┐рдХрд╛рдЪреА рдорд╛рд╣рд┐рддреА",
    selectOption: "-- рдкрд░реНрдпрд╛рдп рдирд┐рд╡рдбрд╛ --",
    landAreaPlaceholder: "рдЬрдорд┐рдиреАрдЪреЗ рдХреНрд╖реЗрддреНрд░рдлрд│ рднрд░рд╛...",
    fertilizerPlaceholder: "рд╡рд╛рдкрд░рд▓реЗрд▓реА рдЦрддреЗ рднрд░рд╛...",
    pestDiseasePlaceholder: "рдХреАрдб/рд░реЛрдЧ рд╕рдорд╕реНрдпрд╛ рднрд░рд╛...",
    laborPlaceholder: "рдЙрджрд╛., рей рдХрд╛рдордЧрд╛рд░ / рджрд┐рд╡рд╕",
    loading: "рд╕рдмрдорд┐рдЯ рдХрд░рдд рдЖрд╣реЛрдд...",
    recommendedCrop: "рд╢рд┐рдлрд╛рд░рд╕ рдХреЗрд▓реЗрд▓реЗ рдкреАрдХ",
    noReport: "рдЕрд╣рд╡рд╛рд▓ рддрдпрд╛рд░ рдХреЗрд▓реЗрд▓рд╛ рдирд╛рд╣реА.",
    farmingPracticesChallenges: "рд╢реЗрддреА рдкрджреНрдзрддреА рдЖрдгрд┐ рдЖрд╡реНрд╣рд╛рдиреЗ",
    financialInfo: "рдЬрдореАрди рдЖрдгрд┐ рдЖрд░реНрдерд┐рдХ рдорд╛рд╣рд┐рддреА",
    oilPHRange: "рдорд╛рддреАрдЪрд╛ pH рд╢реНрд░реЗрдгреА",
    temperatureRange: "рддрд╛рдкрдорд╛рди рд╢реНрд░реЗрдгреА",
    rainfallRequirement: "рдкрд╛рд╡рд╕рд╛рдЪреЗ рдкреНрд░рдорд╛рдг рдЖрд╡рд╢реНрдпрдХ",
    irrigation: "рд╕рд┐рдВрдЪрди",
    aiCropPlanReport: "рдПрдЖрдп рдкрд┐рдХ рдирд┐рдпреЛрдЬрди рдЕрд╣рд╡рд╛рд▓"
  },
  
};


  const navigate = useNavigate();
  const location = useLocation();
  const { lat, lon, language } = location.state || {};
  const t = translations[language || "english"];
  const [loading, setLoading] = useState(false);
  const [expanded, setExpanded] = useState(null);
  const [formData, setFormData] = useState({
    soilType: "",
    soilPH: 7,
    soilEC: "",
    landTopo: "",
    landArea: "",
    budget: "",
    labor: "",
    irrigation: "",
    fertilizer: "",
    pestDisease: "",
    lat: lat || 0, // fallback to 0
    lon: lon || 0, // fallback to 0
    language: language || "english", // fallback to English
  });

  const [responseData, setResponseData] = useState(null);

  const toggleSection = (section) => {
    setExpanded(expanded === section ? null : section);
  };

  const handleChange = (e) => {
    const { name, value, type } = e.target;
    setFormData({
      ...formData,
      [name]: type === "number" || name === "soilPH" ? Number(value) : value,
    });
  };

  const handleSubmit = async () => {
    try {
      console.log(formData);
      const res = await fetch("http://127.0.0.1:5000/recommend-crop", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(formData),
      });
      const data = await res.json();
      console.log("Form Data:", formData);
      console.log(`Response Data: ${JSON.stringify(data)}`);
      setResponseData(data);
    } catch (error) {
      console.error("Error:", error);
    }
  };

  const AccordionHeader = ({ section, title }) => (
    <button
      className={`accordion-header ${expanded === section ? "active" : ""}`}
      onClick={() => toggleSection(section)}
    >
      <span>{title}</span>
      <span className={`arrow ${expanded === section ? "rotate" : ""}`}>тЦ╢</span>
    </button>
  );

  return (
    <div className="crop-container">
      <h1>{t.title}</h1>
      <p>{t.subtitle}</p>

      {/* Farming Location and Environment */}
      <div className="accordion">
        <AccordionHeader section={1} title={t.farmingLocationEnv} />
        {expanded === 1 && (
          <div className="accordion-content">
            <label>{t.soilType}:</label>
            <select name="soilType" value={formData.soilType} onChange={handleChange}>
              <option value="">{t.selectOption}</option>
              <option value="Loamy soil">{t.soilTypeOptions.Loamy}</option>
              <option value="Sandy soil">{t.soilTypeOptions.Sandy}</option>
              <option value="Clay soil">{t.soilTypeOptions.Clay}</option>
              <option value="Silty soil">{t.soilTypeOptions.Silty}</option>
            </select>

            <label>{t.soilPH}: {formData.soilPH}</label>
            <input
              type="range"
              min="0"
              max="14"
              step="0.1"
              name="soilPH"
              value={formData.soilPH}
              onChange={handleChange}
            />

            <label>{t.soilEC}:</label>
            <select name="soilEC" value={formData.soilEC} onChange={handleChange}>
              <option value="">{t.selectOption}</option>
              <option value="Low (0-0.8 ds/m)">{t.ecOptions.Low}</option>
              <option value="Medium (0.8-1.2 ds/m)">{t.ecOptions.Medium}</option>
              <option value="High (>2.0 ds/m)">{t.ecOptions.High}</option>
            </select>

            <label>{t.landTopo}:</label>
            <select name="landTopo" value={formData.landTopo} onChange={handleChange}>
              <option value="">{t.selectOption}</option>
              <option value="Flat">{t.landTopoOptions.flat}</option>
              <option value="Sloped">{t.landTopoOptions.sloped}</option>
              <option value="Undulating">{t.landTopoOptions.undulating}</option>
              <option value="Terraced">{t.landTopoOptions.terraced}</option>
            </select>
          </div>
        )}
      </div>

      {/* Land and Financial Information */}
      <div className="accordion">
        <AccordionHeader section={2} title={t.financialInfo} />
        {expanded === 2 && (
          <div className="accordion-content">
            <label>{t.landArea}:</label>
            <input type="number" name="landArea" placeholder={t.landAreaPlaceholder} value={formData.landArea} onChange={handleChange} step={1} min={0} />

            <label>{t.budget}:</label>
            <select name="budget" value={formData.budget} onChange={handleChange}>
              <option value="">{t.selectOption}</option>
              <option value="Low (тВ╣0 - тВ╣50,000)">{t.budgetOptions.Low}</option>
              <option value="Medium (тВ╣50,001 - тВ╣2,00,000)">{t.budgetOptions.Medium}</option>
              <option value="High (>тВ╣2,00,000)">{t.budgetOptions.High}</option>
            </select>

            <label>{t.labor}:</label>
            <input type="text" name="labor" value={formData.labor} onChange={handleChange} />
          </div>
        )}
      </div>

      {/* Farming Practices and Challenges */}
      <div className="accordion">
        <AccordionHeader section={3} title={t.farmingPracticesChallenges} />
        {expanded === 3 && (
          <div className="accordion-content">
            <label>{t.irrigation}:</label>
            <select name="irrigation" value={formData.irrigation} onChange={handleChange}>
              <option value="">{t.selectOption}</option>
              <option value="Flood">{t.irrigationOptions.Flood}</option>
              <option value="Drip">{t.irrigationOptions.Drip}</option>
              <option value="Sprinkler">{t.irrigationOptions.Sprinkler}</option>
              <option value="Canal">{t.irrigationOptions.Canal}</option>
              <option value="Well">{t.irrigationOptions.Well}</option>
              <option value="Rainfed">{t.irrigationOptions.Rainfed}</option>
            </select>

            <label>{t.fertilizer}:</label>
            <input type="text" name="fertilizer" placeholder={t.fertilizerPlaceholder} value={formData.fertilizer} onChange={handleChange} />

            <label>{t.pestDisease}:</label>
            <input type="text" name="pestDisease" placeholder={t.pestDiseasePlaceholder} value={formData.pestDisease} onChange={handleChange} />
          </div>
        )}
      </div>

      <button className="submit-btn" onClick={handleSubmit}>{t.submit}</button>
      <button className="back-btn" onClick={() => navigate("/")}>{t.back}</button>

      {responseData && (
        <div className="api-response">
          <h2>{t.recommendedCropPlan}</h2>

          {/* Recommended Crop */}
          <div className="crop-card">
            <h3>{responseData.recommended_crop_details?.crop_name || "Suitable crop not found"}</h3>
            <p>{responseData.message}</p>
          </div>

          {/* Suitability Score */}
          <div className="score-section">
            <label>{t.suitabilityScore}:</label>
            <div className="progress-bar">
              <div
                className="progress"
                style={{ width: `${Math.min(responseData.suitability_score || 0, 100)}%` }}
              ></div>
            </div>
            <span>
              {responseData.suitability_score !== undefined && responseData.suitability_score !== null
                ? responseData.suitability_score.toFixed(2)
                : "N/A"} / 100
            </span>
          </div>

          {/* Crop Details */}
          <div className="details">
            <h4>{t.cropDetails}</h4>
            <ul>
              <li>
                <strong>{t.soilType}:</strong> {Array.isArray(responseData.recommended_crop_details?.soil_type)
                  ? responseData.recommended_crop_details.soil_type.join(", ")
                  : responseData.recommended_crop_details?.soil_type || "N/A"}
              </li>
              <li><strong>{t.soilPHRange}:</strong> {responseData.recommended_crop_details?.soil_ph_min} - {responseData.recommended_crop_details?.soil_ph_max}</li>
              <li><strong>{t.temperatureRange}:</strong> {responseData.recommended_crop_details?.min_temperature} - {responseData.recommended_crop_details?.max_temperature}</li>
              <li><strong>{t.rainfallRequirement}:</strong> {responseData.recommended_crop_details?.min_rainfall} - {responseData.recommended_crop_details?.max_rainfall}</li>
              <li>
                <strong>{t.irrigation}:</strong> {typeof responseData.recommended_crop_details?.irrigation?.general === "string"
                  ? responseData.recommended_crop_details.irrigation.general
                  : JSON.stringify(responseData.recommended_crop_details?.irrigation?.general || "N/A")}
              </li>
            </ul>
          </div>

          {/* AI Crop Plan Report */}
          <div className="report">
            <h4>ЁЯУЛ {t.aiCropPlanReport}</h4>
            <div className="report-box">
              {responseData.crop_plan_report || "No report generated."}
            </div>
          </div>
        </div>
      )}

    </div>
  );
}

export default CropPlanner;
